# Class record with marks of the students
# Read the names  and marks of atleast 3 namesOfTheStudents
# Rank the top three students with the highest marks
# Give cash rewards. $500 for the first rank, $300 for the second rank, $100 for the third rank. value cannot be modified
# Appreciate students who secured 950 marks and above

import operator

def namesOfTheStudents():
    print()
    # {"Aakarsh": 900, "Archit": 980, "Sahil": 800, "Raqeeb": 870, "Zaheer": 890}
    print("Enter the number of Students")
    NoOfStudents = int(input())
#Creating a dictionary to store the names and marks of the sytudents
    studentRecord = {}
    for students in range(0, NoOfStudents):
        print("Enter the name of the student:")
        name = input()
        print("Enter the Marks of the students:")
        marks = int(input())
        studentRecord[name] = marks
    print()
    return studentRecord


def rankStudents(studentRecord):
    try:
        print()
        # [('Archit', 980), ('Aakarsh', 900), ('Zaheer', 890), ('Raqeeb', 870), ('Sahil', 800)]
        sortedStudentRecord = sorted(studentRecord.items(), key = operator.itemgetter(1), reverse = True)
        print(sortedStudentRecord)
        print("{} has secured first rank, scoring {} marks".format(sortedStudentRecord[0][0], sortedStudentRecord[0][1]))
        print("{} has secured second rank, scoring {} marks".format(sortedStudentRecord[1][0], sortedStudentRecord[1][1]))
        print("{} has secured third rank, scoring {} marks".format(sortedStudentRecord[2][0], sortedStudentRecord[2][1]))
        print()
        return sortedStudentRecord
    except IndexError:
        print("Enter a minimum of 3 students")
        quit()
            

def rewardStudents(sortedStudentRecord, reward):
    print()
    print("{} has received a cash reward of ${}".format(sortedStudentRecord[0][0], reward[0]))
    print("{} has received a cash reward of ${}".format(sortedStudentRecord[1][0], reward[1]))
    print("{} has received a cash reward of ${}".format(sortedStudentRecord[2][0], reward[2]))
    print()

def appreciateStudents(sortedStudentRecord):
    print()
    for record in sortedStudentRecord:
        if record[1] >= 950:
            print("Congratulations on scoring {} marks, {}".format(record[1], record[0]))
        else:
            break
        print()

studentRecord = namesOfTheStudents()
sortedStudentRecord = rankStudents(studentRecord)
reward = (500, 300, 100)
rewardStudents(sortedStudentRecord, reward)
appreciateStudents(sortedStudentRecord)
